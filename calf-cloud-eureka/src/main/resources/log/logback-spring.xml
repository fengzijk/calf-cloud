<configuration scan="true" scanPeriod="10 seconds">
    <!--    项目路径 -->
    <property name="APPDIR" value="@pom.artifactId@"/>
    <property name="LOG_PATH" value="./log"/>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>

    <!-- 控制台 appender -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">

        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%black(${APPDIR}) %red(%d{yyyy-MM-dd HH:mm:ss.SSS}) %green([%thread]) %highlight(%-5level) %boldMagenta(%logger{36}) - %cyan(%msg%n)</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        <!-- 设置过滤级别 -->
        <level>DEBUG</level>
        </filter>
    </appender>

    <appender name="INFO_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter是appender的过滤器，包括：
            1. LevelFilter：级别过滤器，只输出指定级别日志信息。
            2. ThresholdFilter：临界值过滤器，会输出指定级别及以上的日志信息。
            3. EvaluatorFilter：条件过滤器，只输出符合鉴别器规定的日志信息 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 设置过滤级别 -->
            <level>INFO</level>
            <!-- DENY，日志将立即被抛弃不再经过其他过滤器 -->
            <!-- NEUTRAL，有序列表里的下个过滤器过接着处理日志 -->
            <!-- ACCEPT，日志会被立即处理，不再经过剩余过滤器 -->
            <!-- 用于配置符合过滤条件的操作 -->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!-- 用于配置不符合过滤条件的操作 -->
            <!--<onMismatch>DENY</onMismatch>-->
        </filter>
        <!-- 正在记录的日志文件的路径及文件名 -->
        <File>${LOG_PATH}/${APPDIR}-info.log</File>
        <!-- 日志记录器的滚动策略，按日期，按大小记录 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_PATH}/${APPDIR}-%d{yyyyMMdd}.%i.log</fileNamePattern>
            <!-- 除按日志记录之外，还配置了日志文件不能超过80M，若超过80M，日志文件会以索引0开始，
            命名日志文件，例如log-error-2013-12-21.0.log 如果要使用maxFileSize必须要文件名设置时必须要指定索引.%i -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>80mb</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 日志总保存量为10GB -->
            <!--<totalSizeCap>10GB</totalSizeCap>-->
            <!-- 日志最大的历史 10天 会自动删除之前的文件 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${APPDIR}-%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</Pattern>
        </layout>
    </appender>


    <appender name="ERROR_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter是appender的过滤器，包括：
            1. LevelFilter：级别过滤器，只输出指定级别日志信息。
            2. ThresholdFilter：临界值过滤器，会输出指定级别及以上的日志信息。
            3. EvaluatorFilter：条件过滤器，只输出符合鉴别器规定的日志信息 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 设置过滤级别 -->
            <level>ERROR</level>
            <!-- DENY，日志将立即被抛弃不再经过其他过滤器 -->
            <!-- NEUTRAL，有序列表里的下个过滤器过接着处理日志 -->
            <!-- ACCEPT，日志会被立即处理，不再经过剩余过滤器 -->
            <!-- 用于配置符合过滤条件的操作 -->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!-- 用于配置不符合过滤条件的操作 -->
            <!--<onMismatch>DENY</onMismatch>-->
        </filter>
        <!-- 正在记录的日志文件的路径及文件名 -->
        <File>${LOG_PATH}/${APPDIR}-error.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_PATH}/${APPDIR}-error-%d{yyyyMMdd}.%i.log</fileNamePattern>
            <!-- 除按日志记录之外，还配置了日志文件不能超过80M，若超过80M，日志文件会以索引0开始，
            命名日志文件，例如log-error-2013-12-21.0.log 如果要使用maxFileSize必须要文件名设置时必须要指定索引.%i -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>80mb</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 日志总保存量为10GB -->
            <!--<totalSizeCap>10GB</totalSizeCap>-->
            <!-- 日志最大的历史 10天 会自动删除之前的文件 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${APPDIR}-%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</Pattern>
        </layout>
    </appender>



    <appender name="TASK_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter是appender的过滤器，包括：
            1. LevelFilter：级别过滤器，只输出指定级别日志信息。
            2. ThresholdFilter：临界值过滤器，会输出指定级别及以上的日志信息。
            3. EvaluatorFilter：条件过滤器，只输出符合鉴别器规定的日志信息 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- 设置过滤级别 -->
            <level>INFO</level>
            <!-- DENY，日志将立即被抛弃不再经过其他过滤器 -->
            <!-- NEUTRAL，有序列表里的下个过滤器过接着处理日志 -->
            <!-- ACCEPT，日志会被立即处理，不再经过剩余过滤器 -->
            <!-- 用于配置符合过滤条件的操作 -->
            <!--<onMatch>ACCEPT</onMatch>-->
            <!-- 用于配置不符合过滤条件的操作 -->
            <!--<onMismatch>DENY</onMismatch>-->
        </filter>
        <!-- 正在记录的日志文件的路径及文件名 -->
        <File>${LOG_PATH}/${APPDIR}-task.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。
            而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 -->
            <fileNamePattern>${LOG_PATH}/${APPDIR}-task-%d{yyyyMMdd}.%i.log</fileNamePattern>
            <!-- 除按日志记录之外，还配置了日志文件不能超过80M，若超过80M，日志文件会以索引0开始，
            命名日志文件，例如log-error-2013-12-21.0.log 如果要使用maxFileSize必须要文件名设置时必须要指定索引.%i -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>80mb</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- 日志总保存量为10GB -->
            <!--<totalSizeCap>10GB</totalSizeCap>-->
            <!-- 日志最大的历史 10天 会自动删除之前的文件 -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!-- 日志文件的格式 -->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>${APPDIR}-%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</Pattern>
        </layout>
    </appender>
    <!-- 也是<loger>元素，但是它是根loger。只有一个level属性，应为已经被命名为"root".
    level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。默认是DEBUG。 -->
    <root level="INFO">
        <appender-ref ref="INFO_FILE"/>
        <appender-ref ref="ERROR_FILE"/>
        <appender-ref ref="TASK_FILE"/>
    </root>
</configuration>